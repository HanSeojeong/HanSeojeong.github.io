{"version":3,"sources":["components/organisms/TopNav.jsx","components/organisms/MovieList.jsx","components/organisms/BookList.jsx","components/organisms/Pagination.jsx","components/pages/Main.jsx","apis/book.js","components/pages/Book.jsx","apis/movie.js","components/pages/Movie.jsx","components/pages/BookDetail.jsx","Router.js","App.js","reportWebVitals.js","index.js"],"names":["linkList","link","name","Container","styled","div","Nav","nav","LinkList","ul","LinkItem","li","active","css","TopNav","pathname","useLocation","map","to","List","Item","Image","img","Body","Title","p","Director","MovieList","data","image","title","director","href","target","rel","src","dangerouslySetInnerHTML","__html","Content","span","Author","BookList","isbn","author","split","PageList","BtnPage","button","props","Pagination","total","onChange","pageNow","lastPage","Math","ceil","startPage","endPage","pageList","i","push","onClick","page","handlePageChange","Wrapper","BtnLink","Main","getBookList","params","a","axios","get","headers","result","getBookInfo","Form","form","InputText","input","BtnSearch","Book","useState","query","setQuery","bookList","setBookList","value","setValue","setTotal","setPage","navigate","useNavigate","search","useEffect","qs","parse","slice","searchList","handleSubmit","e","preventDefault","start","items","stringify","console","log","onSubmit","placeholder","getMovieList","countryList","code","InputQuery","Movie","movieList","setMovieList","country","setCountry","BookImg","Contents","Description","Information","BookDetail","useParams","book","setBook","init","d_isbn","description","pubdate","Router","path","element","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb7c074e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nconst linkList = [\r\n  { link: \"/\", name: \"메인\" },\r\n  { link: \"/book\", name: \"책\" },\r\n  { link: \"/movie\", name: \"영화\" },\r\n];\r\n\r\nfunction TopNav() {\r\n  // const location = useLocation(); useLocation()이라는 훅에는 location에관한 url에 관한 dom 이 들어있다.\r\n  let { pathname } = useLocation();\r\n\r\n  if (pathname === \"/\") return <></>;\r\n\r\n  return (\r\n    <Container>\r\n      <Nav>\r\n        <LinkList>\r\n          {linkList.map(({ link, name }) => (\r\n            <Link key={link} to={link}>\r\n              <LinkItem active={pathname === link}>{name}</LinkItem>\r\n            </Link>\r\n          ))}\r\n        </LinkList>\r\n      </Nav>\r\n    </Container>\r\n  );\r\n}\r\nconst Container = styled.div`\r\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2);\r\n`;\r\nconst Nav = styled.nav``;\r\nconst LinkList = styled.ul`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0;\r\n  margin: 0;\r\n  list-style: none;\r\n`;\r\nconst LinkItem = styled.li`\r\n  margin: 0 10px;\r\n  cursor: pointer;\r\n  color: #000;\r\n  padding: 10px;\r\n  ${({ active }) =>\r\n    active &&\r\n    css`\r\n      background: #000;\r\n      color: #fff;\r\n    `};\r\n`;\r\nexport default TopNav;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MovieList = ({ data }) => {\r\n  return (\r\n    <List>\r\n      {data.map(({ link, image, title, director }) => (\r\n        <a href={link} target=\"_blank\" rel=\"noreferrer\" key={link}>\r\n          <Item>\r\n            <Image src={image} />\r\n            <Body>\r\n              <Title dangerouslySetInnerHTML={{ __html: title }}></Title>\r\n              <Director>{director}</Director>\r\n            </Body>\r\n          </Item>\r\n        </a>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nconst List = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n`;\r\nconst Item = styled.div`\r\n  display: flex;\r\n  margin: 2px;\r\n`;\r\nconst Image = styled.img`\r\n  width: 5rem;\r\n  height: 8rem;\r\n`;\r\nconst Body = styled.div``;\r\nconst Title = styled.p`\r\n  font-size: 0.8rem;\r\n  margin: 0 0 1px;\r\n`;\r\nconst Director = styled.p`\r\n  font-size: 0.5rem;\r\n  font-style: italic;\r\n  margin-bottom: 1px;\r\n`;\r\nexport default MovieList;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction BookList({ data }) {\r\n  return (\r\n    <Container>\r\n      {data.map(({ link, isbn, image, title, author }) => (\r\n        <Item key={link}>\r\n          <Link to={`/book/${isbn.split(\" \")[1]}`}>\r\n            <Image src={image} />\r\n            <Content>\r\n              <div>\r\n                저자:\r\n                <Title dangerouslySetInnerHTML={{ __html: title }}></Title>\r\n              </div>\r\n              <Author>저자: {author}</Author>\r\n            </Content>\r\n          </Link>\r\n        </Item>\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\nconst Container = styled.ul`\r\n  list-style: none;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  padding: 0;\r\n  margin: 0;\r\n`;\r\nconst Item = styled.li`\r\n  margin: 5px;\r\n  display: flex;\r\n`;\r\nconst Image = styled.img``;\r\nconst Content = styled.div``;\r\nconst Title = styled.span``;\r\nconst Author = styled.p``;\r\nexport default BookList;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nfunction Pagination({ total, onChange, pageNow }) {\r\n  const handlePageChange = (page) => {\r\n    onChange(page);\r\n  };\r\n\r\n  const lastPage = Math.ceil(total / 10);\r\n  const startPage = (Math.ceil(pageNow / 10) - 1) * 10 + 1;\r\n  //Math.floor(pageNow-1/10)*10+1\r\n  const endPage = lastPage < startPage + 9 ? lastPage : startPage + 9;\r\n  const pageList = [];\r\n  for (let i = startPage; i <= endPage; i++) {\r\n    pageList.push(i);\r\n  }\r\n\r\n  return (\r\n    <PageList>\r\n      {pageNow > 1 && (\r\n        <BtnPage onClick={() => onChange(pageNow - 1)}>이전</BtnPage>\r\n      )}\r\n      {pageList.map((page) => (\r\n        <BtnPage\r\n          key={page}\r\n          active={pageNow === page}\r\n          onClick={() => handlePageChange(page)}\r\n        >\r\n          {page}\r\n        </BtnPage>\r\n      ))}\r\n      {pageNow < lastPage && (\r\n        <BtnPage onClick={() => onChange(pageNow + 1)}>다음</BtnPage>\r\n      )}\r\n    </PageList>\r\n  );\r\n}\r\n\r\nconst PageList = styled.ul`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 0;\r\n`;\r\nconst BtnPage = styled.button`\r\n  ${({ active }) =>\r\n    active &&\r\n    css`\r\n      background: black;\r\n      color: #fff;\r\n    `}/* background: ${(props) => props.active && \"red\"}; */\r\n`;\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Main = () => {\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <Link to={\"/book\"}>\r\n          <BtnLink>책검색</BtnLink>\r\n        </Link>\r\n        <Link to={\"/movie\"}>\r\n          <BtnLink>영화검색</BtnLink>\r\n        </Link>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 60px;\r\n`;\r\nconst BtnLink = styled.button`\r\n  width: 300px;\r\n  height: 100px;\r\n  font-size: 20px;\r\n  margin: 20px;\r\n`;\r\nexport default Main;\r\n","import axios from \"axios\";\r\n\r\nexport const getBookList = async (params) => {\r\n  const result = await axios.get(\"/v1/search/book.json\", {\r\n    headers: {\r\n      \"X-Naver-Client-Id\": \"bC7cY5dCz8myKmY3WL6g\",\r\n      \"X-Naver-Client-Secret\": \"8kmO3v723_\",\r\n    },\r\n    params,\r\n  });\r\n\r\n  return result.data;\r\n};\r\n\r\nexport const getBookInfo = async (params) => {\r\n  const result = await axios.get(\"/v1/search/book_adv.json\", {\r\n    headers: {\r\n      \"X-Naver-Client-Id\": \"bC7cY5dCz8myKmY3WL6g\",\r\n      \"X-Naver-Client-Secret\": \"8kmO3v723_\",\r\n    },\r\n    params,\r\n  });\r\n  return result.data;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport qs from \"qs\";\r\nimport { BookList } from \"../organisms/\";\r\nimport { getBookList } from \"../../apis/book\";\r\nimport styled from \"styled-components\";\r\nimport Pagination from \"../organisms/Pagination\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nconst Book = () => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [bookList, setBookList] = useState([]);\r\n  const [value, setValue] = useState(\"\");\r\n  const [total, setTotal] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const navigate = useNavigate();\r\n  const { search } = useLocation();\r\n  useEffect(() => {\r\n    //search = \"?query=책\"\r\n    //console.log(qs.parse(search.slice(1)));\r\n    const { query } = qs.parse(search.slice(1));\r\n    setQuery(query);\r\n    setValue(query);\r\n  }, [search]);\r\n\r\n  useEffect(() => {\r\n    //검색하기전에 query없을때 오류발생방지위해서 if query가 있으면 searchList해라.\r\n    //page로 하면 재검색시 오류.\r\n    if (query) {\r\n      searchList();\r\n    }\r\n  }, [page, query]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setPage(1);\r\n    setQuery(value);\r\n    // const params = { query:query };\r\n    // const result = await getBookList(params);\r\n    // setBookList(result.items);\r\n    // console.log(bookList);\r\n  };\r\n\r\n  const searchList = async () => {\r\n    const start = (page - 1) * 10 + 1;\r\n    const params = { query, start };\r\n    const { items, total } = await getBookList(params);\r\n    //(await getBookList(params)).items .total 비구조화할당\r\n    setBookList(items);\r\n    setTotal(total);\r\n\r\n    const search = qs.stringify({ query });\r\n    console.log(search);\r\n    navigate({ search });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>책 검색</h2>\r\n      <Form onSubmit={handleSubmit}>\r\n        <InputText\r\n          placeholder=\"책제목을 입력하세요\"\r\n          onChange={(e) => setValue(e.target.value)}\r\n          value={value}\r\n        />\r\n        <BtnSearch>검색</BtnSearch>\r\n      </Form>\r\n      <BookList data={bookList} />\r\n      <Pagination onChange={setPage} total={total} pageNow={page} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n`;\r\nconst InputText = styled.input`\r\n  flex: 1;\r\n  border: none;\r\n  background: orange;\r\n`;\r\nconst BtnSearch = styled.button``;\r\nexport default Book;\r\n","import axios from \"axios\";\r\n\r\nexport const getMovieList = async (params) => {\r\n  const result = await axios.get(\"/v1/search/movie.json\", {\r\n    headers: {\r\n      \"X-Naver-Client-Id\": \"bC7cY5dCz8myKmY3WL6g\",\r\n      \"X-Naver-Client-Secret\": \"8kmO3v723_\",\r\n    },\r\n    params,\r\n  });\r\n\r\n  return result.data;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { MovieList, Pagination } from \"../organisms/\";\r\nimport { getMovieList } from \"../../apis/movie\";\r\nimport styled from \"styled-components\";\r\n\r\nconst countryList = [\r\n  { code: \"all\", name: \"전체\" },\r\n  { code: \"KR\", name: \"한국\" },\r\n  { code: \"GB\", name: \"영국\" },\r\n  { code: \"FR\", name: \"프랑스\" },\r\n  { code: \"HK\", name: \"홍콩\" },\r\n  { code: \"CN\", name: \"중국\" },\r\n  { code: \"RU\", name: \"러시아\" },\r\n  { code: \"ETC\", name: \"그외\" },\r\n];\r\n//리액트요소와 별개의 데이터여서 밖에다 선언\r\nconst Movie = () => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [movieList, setMovieList] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [value, setValue] = useState(\"\");\r\n  const [total, setTotal] = useState(0);\r\n  const [country, setCountry] = useState(countryList[0].code);\r\n\r\n  useEffect(() => {\r\n    if (query) {\r\n      searchList();\r\n    }\r\n  }, [page, query, country]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setPage(1);\r\n    setQuery(value);\r\n  };\r\n\r\n  const searchList = async () => {\r\n    const start = (page - 1) * 10 + 1;\r\n    const params = { query, start };\r\n    if (country !== \"all\") {\r\n      params.country = country;\r\n    }\r\n    const { items, total } = await getMovieList(params);\r\n    //아래 함수에 써주어야하는 결과값을 받아오는걸 기다리게 하기위해(안그러면\r\n    //매개변수값이 오기도 전에 실행해버리는결과가 도출됨) callback,then을 썼고 이번에는 async await를 썼다.\r\n\r\n    setMovieList(items);\r\n    setTotal(total);\r\n  };\r\n\r\n  const changeCountry = (e) => {\r\n    setPage(1);\r\n    setCountry(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>영화 검색</h2>\r\n      <Form onSubmit={handleSubmit}>\r\n        <select onChange={changeCountry}>\r\n          {countryList.map(({ name, code }) => (\r\n            <option key={code} value={code}>\r\n              {name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <InputQuery\r\n          placeholder=\"영화제목을 입력하세요\"\r\n          onChange={(e) => setValue(e.target.value)}\r\n          value={value}\r\n        />\r\n        <button>검색</button>\r\n      </Form>\r\n\r\n      <MovieList data={movieList} />\r\n      <Pagination onChange={setPage} total={total} pageNow={page} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n`;\r\nconst InputQuery = styled.input`\r\n  flex: 1;\r\n  background: black;\r\n  color: #fff;\r\n  border: 1px solid #fff;\r\n`;\r\n\r\nexport default Movie;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { getBookInfo } from \"../../apis/book\";\r\n\r\nconst isbn = \"9791191043532\";\r\n\r\nconst BookDetail = () => {\r\n  let { isbn } = useParams();\r\n\r\n  const [book, setBook] = useState({});\r\n\r\n  const init = async () => {\r\n    const params = { d_isbn: isbn };\r\n    const { items } = await getBookInfo(params);\r\n    setBook(items[0]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    init();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <BookImg src={book.image} />\r\n      <Contents>\r\n        <Title>{book.title}</Title>\r\n        <Description>{book.description}</Description>\r\n        <Information>\r\n          저자 :{book.author} 출간일자 :{book.pubdate}\r\n        </Information>\r\n      </Contents>\r\n    </Container>\r\n  );\r\n};\r\nconst Container = styled.div`\r\n  margin: 20px;\r\n  display: flex;\r\n`;\r\nconst BookImg = styled.img`\r\n  width: 300px;\r\n`;\r\nconst Contents = styled.div`\r\n  padding: 10px;\r\n`;\r\nconst Title = styled.p`\r\n  font-weight: bold;\r\n  font-size: 1.3rem;\r\n  margin: 0 0 10px;\r\n`;\r\nconst Description = styled.p``;\r\nconst Information = styled.p`\r\n  font-size: 0.8rem;\r\n`;\r\nexport default BookDetail;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport { TopNav } from \"./components/organisms\";\r\nimport { Main, Book, Movie, BookDetail } from \"./components/pages\";\r\nconst Router = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <TopNav />\r\n      <Routes>\r\n        <Route path=\"/\" element={<Main />} />\r\n        <Route path=\"/book\" element={<Book />} />\r\n        <Route path=\"/movie\" element={<Movie />} />\r\n        <Route path=\"/book/:isbn\" element={<BookDetail />} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import Router from \"./Router\";\nimport \"./App.css\";\n\nfunction App() {\n  return <Router />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}